{
  "providerClassMap": {
    "environmentalData": "com.intel.dai.monitoring.EnvironmentalProviderHPCM",
    "rasData": "com.intel.dai.monitoring.RasEventProviderForeignBus"
  },

  "networkStreams": {
    "nodeTelemetry": {
      "arguments": {
        "bootstrap.servers": "admin:9092",
	"group.id": "dai-monitoring",
	"schema.registry.url": "http://admin:8081",
	"value.deserializer": "io.confluent.kafka.serializers.KafkaAvroDeserializer",
	"auto.commit.enable": true,
        "topics": "sensors_node"
      },
      "name": "kafka"
    },
    "events": {
      "arguments": {
        "fullUrl": "https://api-gw-service-nmn.local/apis/sma-telemetry-api/v1/stream/cray-dmtf-resource-event?stream_id=dai-events",
        "connectTimeout": "30",
        "tokenAuthProvider": "com.intel.authentication.KeycloakTokenAuthentication",
        "tokenServer": "https://api-gw-service-nmn.local/keycloak/",
        "clientId": "admin-client",
        "clientSecret": "dd0f8dee-f40b-4b16-a5dd-af2ed1b8a99c",
        "realm": "shasta"
      },
      "name": "eventSource"
    }
  },

  "adapterProfiles": {
    "environmental": {
      "networkStreamsRef": [
        "nodeTelemetry"
      ],
      "subjects": [
        "*"
      ],
      "adapterProvider": "environmentalData"
    },
    "ras_events": {
      "networkStreamsRef": [
        "events"
      ],
      "subjects": [
        "*"
      ],
      "adapterProvider": "rasData"
    }
  },

  "providerConfigurations": {
    "com.intel.dai.network_listener.NetworkListenerSystemActions": {
      "sourceType": "rabbitmq",
      "exchangeName": "ucs",
      "uri": "amqp://am02-nmn.local"
    },
    "com.intel.dai.monitoring.EnvironmentalProviderForeignBus": {
      "publishRawTopic": "ucs_raw_data",
      "publishAggregatedTopic": "ucs_aggregated_data",
      "publish": true
    },
    "com.intel.dai.monitoring.RasEventProviderForeignBus": {
      "publishTopic": "ucs_ras_event",
      "publish": true
    }
  },

  "subjectMap": {
    "telemetry": "EnvironmentalData",
    "inventoryChanges": "InventoryChangeEvent",
    "logs": "LogData",
    "events": "RasEvent",
    "stateChanges": "StateChangeEvent"
  }
}
